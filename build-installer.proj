<?xml version="1.0" encoding="utf-8"?>
<!--
  MSBuild file to generate the MSI for current $(Configuration)
  
  Iterates over supported TFS versions.

  Sample usage:

  MSBuild build-installer.proj /t:Build /p:Configuration=Debug /clp:Verbosity=minimal /fl /flp:LogFile=build-installer.log;Append;Verbosity=detailed;Encoding=UTF-8
-->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <Platform Condition=" '$(Platform)' == '' ">ia64</Platform>
    <SetupProjectDir>$(MSBuildProjectDirectory)\Setup.Aggregator</SetupProjectDir>
    <OutputPath>$(SetupProjectDir)\bin\$(Configuration)\</OutputPath>
    <OutputName>TFSAggregator</OutputName>
    <OutputType>Package</OutputType>
    <IntermediateOutputPath>$(SetupProjectDir)\obj\$(Configuration)\</IntermediateOutputPath>
    <WixTargetsPath>$(MSBuildExtensionsPath)\Microsoft\WiX\v3.x\Wix.targets</WixTargetsPath>
  </PropertyGroup>

  <PropertyGroup>
    <PathToSolutionDir>$(MSBuildProjectDirectory)</PathToSolutionDir>
    <PathToSolutionFile>$(PathToSolutionDir)\tfs-aggregator-plugin.sln</PathToSolutionFile>
    <!-- get NuGet URL from https://dist.nuget.org/index.html -->
    <NuGetDownloadUrl>https://dist.nuget.org/win-x86-commandline/v4.1.0/nuget.exe</NuGetDownloadUrl>
    <WixVersion>3.11.0</WixVersion>
    <WixPropsPath>$(PathToSolutionDir)\packages\WiX.$(WixVersion)\build\wix.props</WixPropsPath>
    <CollectDir>$(MSBuildProjectDirectory)\_collect\$(Configuration)</CollectDir>
    <NeutralDir>$(CollectDir)\Neutral</NeutralDir>
    <WikiUrl>https://github.com/tfsaggregator/tfsaggregator.wiki.git</WikiUrl>
    <!-- Assume that we get values from GitVersion -->
    <MajorMinorPatch Condition=" '$(MajorMinorPatch)' == '' ">0.2.3</MajorMinorPatch>
    <FullSemVer Condition=" '$(FullSemVer)' == '' ">0.2.3-alpha+local</FullSemVer>
    <!-- Defaults to global install -->
    <GitExe>git</GitExe>
    <!-- skip process steps by setting False -->
    <BuildSolution>True</BuildSolution>
    <CollectFiles>True</CollectFiles>
    <BuildMSI>True</BuildMSI>
    <WiXProjectPropertiesFile>Setup.Aggregator\_clisrv.g.properties</WiXProjectPropertiesFile>
  </PropertyGroup>

  <Import Project="$(WixPropsPath)" Condition="Exists('$(WixPropsPath)')" />
  <Import Project="$(WixTargetsPath)" Condition="Exists('$(WixTargetsPath)')" />

  <!-- TFS versions supported 
  Note: these values are all-over the places, e.g.
    - source code conditional compile
    - WiX sources
    - MSBuild project files
  -->
  <ItemGroup>
    <TfsVersion Include="2013" >
      <Alt>2013</Alt>
    </TfsVersion>
    <TfsVersion Include="2015" >
      <Alt>2015</Alt>
      <ExtendedClientVersion>14.83.1</ExtendedClientVersion>
    </TfsVersion>
    <TfsVersion Include="2015.1" >
      <Alt>2015u1</Alt>
      <ExtendedClientVersion>14.83.1</ExtendedClientVersion>
    </TfsVersion>
    <TfsVersion Include="2015.2" >
      <Alt>2015u2</Alt>
      <ExtendedClientVersion>14.83.1</ExtendedClientVersion>
    </TfsVersion>
    <TfsVersion Include="2017" >
      <Alt>2017</Alt>
      <ExtendedClientVersion>15.103.0-preview</ExtendedClientVersion>
    </TfsVersion>
    <TfsVersion Include="2017.2" >
      <Alt>2017u2</Alt>
      <ExtendedClientVersion>15.112.1</ExtendedClientVersion>
    </TfsVersion>
    <TfsVersion Include="2018" >
      <Alt>2018</Alt>
      <ExtendedClientVersion>15.122.1-preview</ExtendedClientVersion>
    </TfsVersion>
  </ItemGroup>



  <Target Name="CleanSolution">
    <MSBuild Projects="$(PathToSolutionFile)"
             Targets="Clean"
             Properties="Configuration=$(Configuration)-%(TfsVersion.Identity)" />
  </Target>

  <Target Name="CleanCollected">
    <ItemGroup>
      <PreviouslyCollected Include="$(CollectDir)" />
    </ItemGroup>
    <RemoveDir Directories="$(CollectDir)" />
  </Target>



  <Target Name="BuildSolutionFlavor">
    <Message Importance="high" Text="-------------- Building $(CurrentTfsVersion) --------------" />
    <Exec Command="msbuild.exe /t:restore;build /p:TfsVersion=$(CurrentTfsVersion);Configuration=$(CurrentFlavor);TF_BUILD=True /m $(PathToSolutionFile)" />
  </Target>

  <Target Name="BuildSolution" Condition="$(BuildSolution)">
    <!-- re-entrant call pattern -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="BuildSolutionFlavor"
             Properties="CurrentTfsVersion=%(TfsVersion.Identity);CurrentFlavor=$(Configuration)-%(TfsVersion.Identity);" />
  </Target>



  <Target Name="CollectVersionSpecificFiles">
    
    <ItemGroup>
      <cliBin Include="$(MSBuildProjectDirectory)\Aggregator.ConsoleApp\bin\$(CurrentFlavor)\*.exe" Exclude="*.vshost.exe" />
      <!-- Exclude non-redistributable assemblies -->
      <cliBin Include="$(MSBuildProjectDirectory)\Aggregator.ConsoleApp\bin\$(CurrentFlavor)\**\*.dll" Exclude="*.Server.*" />
      <!-- HACK this unmanaged library is not picked up automatically via references -->
      <cliBin Condition="'$(ExtendedClientVersion)'!=''" Include="$(MSBuildProjectDirectory)\Aggregator.ConsoleApp\bin\$(CurrentFlavor)\Microsoft.WITDataStore32.dll" />
      <cliBin Condition="'$(ExtendedClientVersion)'!=''" Include="$(MSBuildProjectDirectory)\Aggregator.ConsoleApp\bin\$(CurrentFlavor)\Microsoft.WITDataStore64.dll" />
      <cliBin Include="$(MSBuildProjectDirectory)\Aggregator.ConsoleApp\bin\$(CurrentFlavor)\**\*.pdb" Exclude="*.Server.*" />
    </ItemGroup>
    <ItemGroup>
      <srvBin Include="$(MSBuildProjectDirectory)\Aggregator.ServerPlugin\bin\$(CurrentFlavor)\TFSAggregator2.*.dll" />
      <srvBin Include="$(MSBuildProjectDirectory)\Aggregator.ServerPlugin\bin\$(CurrentFlavor)\TFSAggregator2.*.pdb" />
    </ItemGroup>

    <MakeDir Directories="$(CollectDir)\$(CurrentTfsVersion)\cliBin" />
    <Copy SourceFiles="@(cliBin)" DestinationFolder="$(CollectDir)\$(CurrentTfsVersion)\cliBin" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />

    <MakeDir Directories="$(CollectDir)\$(CurrentTfsVersion)\srvBin" />
    <Copy SourceFiles="@(srvBin)" DestinationFolder="$(CollectDir)\$(CurrentTfsVersion)\srvBin" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />

    <HeatDirectory
      NoLogo="True"
      AutogenerateGuids="False" GenerateGuidsNow="True"
      OutputFile="$(IntermediateOutputPath)\_cliBin_$(CurrentTfsVersion).wxs"
      Directory="$(CollectDir)\$(CurrentTfsVersion)\cliBin"
      ComponentGroupName="ClientComponents$(CurrentTfsVersion)"
      DirectoryRefId="ClientBinDir"
      PreprocessorVariable="var.ClientBinDir$(CurrentTfsVersion)"
      Transforms="$(SetupProjectDir)\T$(CurrentTfsVersion).xslt"
      SuppressCom="True" SuppressRootDirectory="True" SuppressRegistry="True"
      ToolPath="$(WixToolPath)" ContinueOnError="WarnAndContinue" />

    <HeatDirectory
      NoLogo="True"
      AutogenerateGuids="False" GenerateGuidsNow="True"
      OutputFile="$(IntermediateOutputPath)\_srvBin_$(CurrentTfsVersion).wxs"
      Directory="$(CollectDir)\$(CurrentTfsVersion)\srvBin"
      ComponentGroupName="ServerComponents$(CurrentTfsVersion)"
      DirectoryRefId="TFSPlugins"
      PreprocessorVariable="var.ServerBinDir$(CurrentTfsVersion)"
      Transforms="$(SetupProjectDir)\T$(CurrentTfsVersion).xslt"
      SuppressCom="True" SuppressRootDirectory="True" SuppressRegistry="True"
      ToolPath="$(WixToolPath)" ContinueOnError="WarnAndContinue" />

  </Target>
  
  <Target Name="CollectFilesCore" Condition="$(CollectFiles)">

    <Message Importance="high" Text="-------------- Collecting '$(Configuration)' files --------------" />
    <!-- re-entrant call pattern -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="CollectVersionSpecificFiles"
             Properties="ExtendedClientVersion=%(TfsVersion.ExtendedClientVersion);WixPropsPath=$(WixPropsPath);CurrentTfsVersion=%(TfsVersion.Identity);CurrentFlavor=$(Configuration)-%(TfsVersion.Identity)" />

    <MakeDir Directories="$(NeutralDir)" />

    <PropertyGroup>
      <GitDir>$(CollectDir)\.dummy-git</GitDir>
      <docs>$(NeutralDir)\docs</docs>
    </PropertyGroup>

    <!-- take snapshot of GitHub Wiki -->
    <Exec Command="&quot;$(GitExe)&quot; clone --depth=1 --single-branch --separate-git-dir=$(GitDir) $(WikiUrl) docs"
          WorkingDirectory="$(NeutralDir)"
          Condition="!Exists('$(docs)')" />
    <Exec Command="&quot;$(GitExe)&quot; --git-dir=$(GitDir) pull"
          WorkingDirectory="$(docs)"
          Condition="Exists('$(docs)')" />

    <ItemGroup>
      <WikiPages Include="$(NeutralDir)\docs\*.md" />
    </ItemGroup>
    <FixupWikiLinks Pages="@(WikiPages)" />

    <ItemGroup>
      <samples Include="$(MSBuildProjectDirectory)\samples\*.*" />
      <samples Include="$(MSBuildProjectDirectory)\UnitTests.Core\**\*.policies" />
      <samples Include="$(MSBuildProjectDirectory)\ManualTests\**\*.policies" />
    </ItemGroup>

    <MakeDir Directories="$(NeutralDir)\samples" />
    <Copy SourceFiles="@(samples)" DestinationFolder="$(NeutralDir)\samples" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />

    <ItemGroup>
      <miscellanea Include="$(MSBuildProjectDirectory)\LICENSE*.*" />
      <miscellanea Include="$(MSBuildProjectDirectory)\readme*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(miscellanea)" DestinationFolder="$(NeutralDir)" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
    
    <HeatDirectory
      NoLogo="True"
      AutogenerateGuids="False" GenerateGuidsNow="True"
      OutputFile="$(IntermediateOutputPath)\_neutral.wxs"
      Directory="$(NeutralDir)"
      ComponentGroupName="NeutralComponents$(CurrentTfsVersion)"
      DirectoryRefId="INSTALLFOLDER"
      PreprocessorVariable="var.NeutralDir$(CurrentTfsVersion)"
      SuppressCom="True" SuppressRootDirectory="True" SuppressRegistry="True"
      ToolPath="$(WixToolPath)" ContinueOnError="WarnAndContinue" />

  </Target>

  <Target Name="CollectFiles" DependsOnTargets="GetWiX" Condition="$(CollectFiles)">
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="CollectFilesCore"
             Properties="WixPropsPath=$(WixPropsPath);Configuration=$(Configuration)" />
  </Target>  



  <Target Name="GetWiX" Condition="!Exists('')" >
    <Exec Command="nuget install WiX -version $(WixVersion) -SolutionDirectory $(PathToSolutionDir)" />
  </Target>
  
  <Target Name="GenerateWiXProjectPropertiesFileContent1">
    <ItemGroup>
      <fileProp1 Include="   ClientBinDir$(CurrentTfsVersion)=%24(CollectDir)\$(CurrentTfsVersion)\cliBin%3B" />
      <fileProp1 Include="   ServerBinDir$(CurrentTfsVersion)=%24(CollectDir)\$(CurrentTfsVersion)\srvBin%3B" />
    </ItemGroup>
    <WriteLinesToFile File="$(WiXProjectPropertiesFile)"
                      Lines="@(fileProp1)"
                      Overwrite="false"
                      Encoding="Unicode"/>
  </Target>

  <Target Name="GenerateWiXProjectPropertiesFileContent2">
    <ItemGroup>
      <fileProp2 Include='  &lt;Compile Include="obj\%24(Configuration)\_cliBin_$(CurrentTfsVersion).wxs" />' />
      <fileProp2 Include='  &lt;Compile Include="obj\%24(Configuration)\_srvBin_$(CurrentTfsVersion).wxs" />' />
    </ItemGroup>
    <WriteLinesToFile File="$(WiXProjectPropertiesFile)"
                      Lines="@(fileProp2)"
                      Overwrite="false"
                      Encoding="Unicode"/>
  </Target>
  
  <Target Name="GenerateWiXProjectPropertiesFile">
    <ItemGroup>
      <WiXProjectPropertiesHeader Include='&lt;Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">' />
      <WiXProjectPropertiesHeader Include=" &lt;PropertyGroup>"/>
      <WiXProjectPropertiesHeader Include="  &lt;_CollectDirs>"/>
      <WiXProjectPropertiesBreakr Include="  &lt;/_CollectDirs>"/>
      <WiXProjectPropertiesBreakr Include=" &lt;/PropertyGroup>"/>
      <WiXProjectPropertiesBreakr Include=" &lt;ItemGroup>"/>
      <WiXProjectPropertiesFooter Include=" &lt;/ItemGroup>"/>
      <WiXProjectPropertiesFooter Include="&lt;/Project>" />
    </ItemGroup>
    <!-- file header -->
    <WriteLinesToFile File="$(WiXProjectPropertiesFile)"
                      Lines="@(WiXProjectPropertiesHeader)"
                      Overwrite="true"
                      Encoding="Unicode"/>
    <!-- re-entrant call pattern -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="GenerateWiXProjectPropertiesFileContent1"
             Properties="CurrentTfsVersion=%(TfsVersion.Identity)" />
    <!-- file mid -->
    <WriteLinesToFile File="$(WiXProjectPropertiesFile)"
                      Lines="@(WiXProjectPropertiesBreakr)"
                      Overwrite="false"
                      Encoding="Unicode"/>
    <!-- re-entrant call pattern -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="GenerateWiXProjectPropertiesFileContent2"
             Properties="CurrentTfsVersion=%(TfsVersion.Identity)" />
    <!-- file footer -->
    <WriteLinesToFile File="$(WiXProjectPropertiesFile)"
                      Lines="@(WiXProjectPropertiesFooter)"
                      Overwrite="false"
                      Encoding="Unicode"/>
  </Target>

  <Target Name="BuildMSI" DependsOnTargets="GetWiX;GenerateWiXProjectPropertiesFile" Condition="$(BuildMSI)">
    <Message Importance="high" Text="-------------- Building $(Configuration) MSI --------------" />

    <!-- default target => build MSI -->
    <MSBuild Projects="$(MSBuildProjectDirectory)\Setup.Aggregator\Setup.Aggregator.wixproj"
             Properties="@(TfsVersion -> 'Supports%(Alt)=True');OutputName=TFSAggregator-$(FullSemVer)-$(Configuration);Configuration=$(Configuration);CollectDir=$(CollectDir);NeutralDir=$(NeutralDir);SolutionDir=$(MSBuildProjectDirectory);BuildVersion=$(MajorMinorPatch);WixPropsPath=$(WixPropsPath)" />
  </Target>



  <Target Name="Build" DependsOnTargets="BuildSolution;CollectFiles;BuildMSI">
  </Target>



  <Target Name="Clean" DependsOnTargets="CleanSolution;CleanCollected">
  </Target>



  <UsingTask TaskName="FixupWikiLinks" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Pages ParameterType="Microsoft.Build.Framework.ITaskItem[]" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
      <![CDATA[
        foreach(var page in this.Pages)
        {
            string fileName = page.GetMetadata("FullPath");
            if(!File.Exists(fileName))
            {
              Log.LogError("Could not find file: {0}", fileName);
              return false;
            }
            string find = @"
\[ (?<Label> [^\]]* ) \]
\(
  (?:https\:\/\/github\.com\/tfsaggregator\/tfsaggregator\/wiki\/)? # drop
  (?:
    (?<Page> [A-Za-z0-9\-_]+ )
    | (?<Url> \S* )
  )
\)
";
            var options = RegexOptions.Singleline | RegexOptions.IgnorePatternWhitespace;
            var timeOut = TimeSpan.FromSeconds(2);
            string content = File.ReadAllText(fileName);
            string result = Regex.Replace(
                content,
                find,
                (Match m) => {
                    string Label = m.Groups["Label"].Value;
                    string Page = m.Groups["Page"].Value;
                    string Url = m.Groups["Url"].Value;
                    return string.IsNullOrWhiteSpace(Page)
                        ? string.Format("[{0}]({1})", Label, Url)
                        : string.Format("[{0}]({1}.md)", Label, Page);
                },
                options,
                timeOut);
            File.WriteAllText(fileName, result);
        }
      ]]>
      </Code>
    </Task>
  </UsingTask>
  
</Project>
